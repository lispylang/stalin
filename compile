#!/bin/bash
# Simple Stalin compilation without volume mounts

if [ $# -eq 0 ]; then
    echo "Usage: ./compile <file.sc> [architecture]"
    echo ""
    echo "Available architectures:"
    echo "  IA32, IA32-align-double, AMD64, ARM, PowerPC, PowerPC64"
    echo "  SPARC, SPARCv9, SPARC64, MIPS, Alpha, M68K, S390, Cosmopolitan"
    echo ""
    echo "Default: AMD64"
    exit 1
fi

INPUT_FILE=$1
ARCHITECTURE=${2:-AMD64}  # Default to AMD64 if no architecture specified
BASE_NAME=$(basename "$INPUT_FILE" .sc)

# Validate architecture
VALID_ARCHITECTURES=(
    "IA32" "IA32-align-double" "SPARC" "SPARCv9" "SPARC64"
    "MIPS" "Alpha" "ARM" "M68K" "PowerPC" "S390" "PowerPC64" "AMD64" "Cosmopolitan"
)

if [[ ! " ${VALID_ARCHITECTURES[@]} " =~ " ${ARCHITECTURE} " ]]; then
    echo "‚ùå Invalid architecture: $ARCHITECTURE"
    echo "Valid architectures: ${VALID_ARCHITECTURES[*]}"
    exit 1
fi

# Handle Cosmopolitan architecture differently
if [ "$ARCHITECTURE" = "Cosmopolitan" ]; then
    echo "üåç Using Cosmopolitan universal binary compilation..."
    exec ./compile-cosmopolitan "$INPUT_FILE"
fi

echo "üîß Compiling $INPUT_FILE for $ARCHITECTURE architecture..."

# Create container and copy file
CONTAINER_ID=$(docker run --platform linux/amd64 -d stalin-x86_64 sleep 300)
docker cp "$INPUT_FILE" ${CONTAINER_ID}:/stalin/

# Generate C code
docker exec ${CONTAINER_ID} bash -c "
    cp include/stalin.architectures . 2>/dev/null
    PATH=.:\$PATH
    ./stalin -On -c -architecture $ARCHITECTURE $INPUT_FILE
"

# Extract generated C code
docker cp ${CONTAINER_ID}:/stalin/${BASE_NAME}.c ./${BASE_NAME}.c 2>/dev/null

# Clean up
docker rm -f ${CONTAINER_ID} > /dev/null

# Compile if C code was generated
if [ -f "${BASE_NAME}.c" ]; then
    echo "üì¶ Building native binary from $ARCHITECTURE-generated C code..."

    # Try to compile the generated C code
    if gcc -o "$BASE_NAME" -I./include -O2 "${BASE_NAME}.c" -L./include -lm -lgc 2>/dev/null; then
        echo "‚úÖ Success! Generated C code compiled successfully."
        echo "   Architecture: $ARCHITECTURE"
        echo "   Run with: ./$BASE_NAME"
    else
        echo "‚ö†Ô∏è  C code generation succeeded but native compilation failed."
        echo "   This may be normal for cross-architecture compilation."
        echo "   Generated C file: ${BASE_NAME}.c"
        echo "   Use appropriate cross-compiler for target architecture."
    fi
else
    echo "‚ùå Failed to generate C code for $ARCHITECTURE architecture"
fi