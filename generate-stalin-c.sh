#!/bin/bash
#
# Stalin C File Generator
# =======================
# This script generates the missing stalin-*.c files from the Scheme sources
# using Docker cross-compilation. It solves the bootstrap problem where Stalin
# needs pre-compiled C files to build, but those files are generated by Stalin itself.
#

set -e

echo "Stalin C File Generator"
echo "======================="

# Check if we already have the required C files
check_c_files() {
    local missing_files=()

    # Check for common architecture files
    for arch in IA32 AMD64 ARM64; do
        if [ ! -f "stalin-${arch}.c" ]; then
            missing_files+=("stalin-${arch}.c")
        fi
    done

    if [ ${#missing_files[@]} -eq 0 ]; then
        echo "‚úÖ All Stalin C files already exist"
        return 0
    else
        echo "‚ùå Missing Stalin C files: ${missing_files[*]}"
        return 1
    fi
}

# Generate C files using Docker cross-compilation
generate_c_files() {
    echo "üîß Generating Stalin C files using Docker..."

    # Check if we have the x86_64 Docker image
    if ! docker image inspect stalin-x86_64 >/dev/null 2>&1; then
        echo "‚ùå Docker image stalin-x86_64 not found"
        echo "   Please build it first with: docker build -t stalin-x86_64 ."
        return 1
    fi

    echo "üì¶ Using Docker to generate stalin-IA32.c..."

    # Create a temporary script for Docker execution
    cat > /tmp/stalin-compile.sh << 'EOF'
#!/bin/bash
cd /work
export PATH="/work:/work/bin:$PATH"

# Ensure we have a working Stalin compiler in the container
if [ ! -f "/usr/local/bin/stalin" ] && [ ! -f "./stalin" ] && [ ! -f "./bin/stalin" ]; then
    echo "‚ùå No Stalin compiler found in container"
    exit 1
fi

# Find the Stalin executable
STALIN_EXEC=""
if [ -f "/usr/local/bin/stalin" ]; then
    STALIN_EXEC="/usr/local/bin/stalin"
elif [ -f "./stalin" ]; then
    STALIN_EXEC="./stalin"
elif [ -f "./bin/stalin" ]; then
    STALIN_EXEC="./bin/stalin"
else
    echo "‚ùå Cannot locate Stalin executable"
    exit 1
fi

echo "Using Stalin: $STALIN_EXEC"

# Compile the main Stalin source to C
echo "Compiling stalin.sc to C..."
cd source

# Use Stalin to compile itself to C code
# The -c flag generates C code, -architecture specifies target
if $STALIN_EXEC -On -architecture IA32 -c stalin.sc; then
    echo "‚úÖ Generated stalin.c"
    # Copy to the expected location
    cp stalin.c ../stalin-IA32.c
    echo "‚úÖ Created stalin-IA32.c"
else
    echo "‚ùå Failed to compile stalin.sc to C"
    exit 1
fi
EOF

    chmod +x /tmp/stalin-compile.sh

    # Run Docker container to generate the C files
    if docker run --rm -v "$(pwd):/work" -v "/tmp/stalin-compile.sh:/compile.sh" stalin-x86_64 /compile.sh; then
        echo "‚úÖ Successfully generated C files"
        return 0
    else
        echo "‚ùå Docker compilation failed"
        return 1
    fi
}

# Generate additional architecture variants by copying and modifying
generate_arch_variants() {
    if [ -f "stalin-IA32.c" ]; then
        echo "üìù Creating architecture variants..."

        # AMD64 variant (minimal changes needed)
        if [ ! -f "stalin-AMD64.c" ]; then
            cp stalin-IA32.c stalin-AMD64.c
            echo "‚úÖ Created stalin-AMD64.c (based on IA32)"
        fi

        # ARM64 variant (for future use)
        if [ ! -f "stalin-ARM64.c" ]; then
            cp stalin-IA32.c stalin-ARM64.c
            echo "‚úÖ Created stalin-ARM64.c (based on IA32)"
        fi
    fi
}

# Main execution flow
main() {
    echo "Checking for existing C files..."

    if check_c_files; then
        echo "All required files present, nothing to do."
        return 0
    fi

    echo "Generating missing C files..."
    if generate_c_files; then
        echo "Generating architecture variants..."
        generate_arch_variants

        echo ""
        echo "üéâ Stalin C file generation complete!"
        echo "Generated files:"
        ls -la stalin-*.c 2>/dev/null || echo "  (no stalin-*.c files found - generation may have failed)"

        return 0
    else
        echo ""
        echo "‚ùå Failed to generate Stalin C files"
        echo "This may be because:"
        echo "  1. Docker image stalin-x86_64 is not available"
        echo "  2. The existing Stalin compiler in Docker is broken"
        echo "  3. The source files are incomplete"
        return 1
    fi
}

# Run the main function
main "$@"